{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","scrollWidth","this","props","images","step","frameSize","itemWidth","animationDuration","infinite","frameWidth","scroller","e","setState","prevState","button","target","maxScroll","length","textContent","className","style","width","map","image","index","imageId","toString","height","transition","transform","src","alt","type","onClick","React","Component","App","name","defaultValue","onChange","value","min","max","htmlFor","id","checked","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAQ,CACNC,YAAa,GAFjB,4CAKE,WAAU,IAAD,OACP,EAOIC,KAAKC,MANPC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGIR,EAAgBC,KAAKF,MAArBC,YAEAS,EAAaH,EAAYD,EAEzBK,EAA8B,SAACC,GACnC,EAAKC,UAAS,SAACC,GACb,IAAMC,EAASH,EAAEI,OACXC,EAAab,EAAOc,OAASX,EAAaG,EA0BhD,OAxBAT,EAA6D,SAA7Cc,EAA6BI,YACzClB,EAAcM,EAAYF,EAC1BJ,EAAcM,EAAYF,EAE1BS,EAAUb,cAAgBgB,GAAaR,IACzCR,EAA6D,SAA7Cc,EAA6BI,YACzC,EACAlB,GAGwB,IAA1Ba,EAAUb,aAAqBQ,IACjCR,EAA6D,SAA7Cc,EAA6BI,YACzCF,EACAhB,GAGFgB,EAAYhB,IACdA,EAAcgB,GAGZhB,EAAc,IAChBA,EAAc,GAGT,CAAEA,mBAIb,OACE,sBAAKmB,UAAU,WAAf,UACE,oBACEA,UAAU,iBACVC,MAAO,CAAEC,MAAM,GAAD,OAAKZ,EAAL,OAFhB,SAIGN,EAAOmB,KAAI,SAACC,EAAOC,GAClB,IAAMC,GAAWD,EAAQ,GAAGE,WAE5B,OACE,oBAEEP,UAAU,iBACVC,MAAO,CACLO,OAAO,GAAD,OAAKrB,EAAL,MACNsB,WAAW,aAAD,OAAerB,EAAf,MACVsB,UAAU,aAAD,QAAgB7B,EAAhB,QANb,SASE,qBACE8B,IAAKP,EACLQ,IAAKN,EACLJ,MAAOf,KAXJiB,QAkBb,wBACES,KAAK,SACLC,QAASvB,EAFX,kBAMA,wBACEsB,KAAK,SACLC,QAASvB,EAFX,yBAvFR,GAA8BwB,IAAMC,WCH9BC,E,4MACJrC,MAAQ,CACNI,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFG,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,IACnBC,UAAU,G,4CAGZ,WAAU,IAAD,OACP,EAOIP,KAAKF,MANPI,EADF,EACEA,OACAG,EAFF,EAEEA,UACAD,EAHF,EAGEA,UACAD,EAJF,EAIEA,KACAG,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGF,OACE,sBAAKW,UAAU,MAAf,UAEE,gDAAmBhB,EAAOc,OAA1B,aAEA,0CACA,uBACEe,KAAK,SACLK,KAAK,YACLC,aAAchC,EACdiC,SAAU,SAAA5B,GAAC,OAAI,EAAKC,SAAS,CAAEN,WAAYK,EAAEI,OAAOyB,WAGtD,2CACA,uBACER,KAAK,SACLK,KAAK,YACLC,aAAcjC,EACdoC,IAAK,EACLC,IAAKvC,EAAOc,OACZsB,SAAU,SAAA5B,GAAC,OAAI,EAAKC,SAAS,CAAEP,WAAYM,EAAEI,OAAOyB,WAGtD,qCACA,uBACER,KAAK,SACLK,KAAK,OACLC,aAAclC,EACdqC,IAAK,EACLC,IAAKvC,EAAOc,OAAS,EACrBsB,SAAU,SAAA5B,GAAC,OAAI,EAAKC,SAAS,CAAER,MAAOO,EAAEI,OAAOyB,WAGjD,+CACA,uBACER,KAAK,SACLK,KAAK,oBACLC,aAAc/B,EACdkC,IAAK,EACLF,SAAU,SAAA5B,GAAC,OAAI,EAAKC,SAAS,CAAEL,mBAAoBI,EAAEI,OAAOyB,WAG9D,8BACE,wBAAOG,QAAQ,WAAf,qBAEE,uBACEX,KAAK,WACLY,GAAG,WACHP,KAAK,WACLQ,QAASrC,EACT+B,SAAU,SAAA5B,GAAC,OAAI,EAAKC,SAAS,CAAEJ,SAAUG,EAAEI,OAAO8B,kBAKxD,cAAC,EAAD,CACE1C,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,W,GA5FF0B,IAAMC,WAmGTC,IC7GfU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6531f8ec.chunk.js","sourcesContent":["import React, { MouseEventHandler } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[]\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  scrollWidth: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    scrollWidth: 0,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    let { scrollWidth } = this.state;\n\n    const frameWidth = itemWidth * frameSize;\n\n    const scroller: MouseEventHandler = (e) => {\n      this.setState((prevState) => {\n        const button = e.target;\n        const maxScroll = (images.length * itemWidth) - frameWidth;\n\n        scrollWidth = ((button as HTMLButtonElement).textContent === 'Prev')\n          ? scrollWidth - itemWidth * step\n          : scrollWidth + itemWidth * step;\n\n        if (prevState.scrollWidth === maxScroll && infinite) {\n          scrollWidth = ((button as HTMLButtonElement).textContent === 'Next')\n            ? 0\n            : scrollWidth;\n        }\n\n        if (prevState.scrollWidth === 0 && infinite) {\n          scrollWidth = ((button as HTMLButtonElement).textContent === 'Prev')\n            ? maxScroll\n            : scrollWidth;\n        }\n\n        if (maxScroll < scrollWidth) {\n          scrollWidth = maxScroll;\n        }\n\n        if (scrollWidth < 0) {\n          scrollWidth = 0;\n        }\n\n        return { scrollWidth };\n      });\n    };\n\n    return (\n      <div className=\"carousel\">\n        <ul\n          className=\"carousel__list\"\n          style={{ width: `${frameWidth}px` }}\n        >\n          {images.map((image, index) => {\n            const imageId = (index + 1).toString();\n\n            return (\n              <li\n                key={image}\n                className=\"carousel__item\"\n                style={{\n                  height: `${itemWidth}px`,\n                  transition: `transform ${animationDuration}ms`,\n                  transform: `translate(${-scrollWidth}px)`,\n                }}\n              >\n                <img\n                  src={image}\n                  alt={imageId}\n                  width={itemWidth}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={scroller}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={scroller}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <p>Item size</p>\n        <input\n          type=\"number\"\n          name=\"itemWidth\"\n          defaultValue={itemWidth}\n          onChange={e => this.setState({ itemWidth: +e.target.value })}\n        />\n\n        <p>Frame size</p>\n        <input\n          type=\"number\"\n          name=\"frameSize\"\n          defaultValue={frameSize}\n          min={0}\n          max={images.length}\n          onChange={e => this.setState({ frameSize: +e.target.value })}\n        />\n\n        <p>Step</p>\n        <input\n          type=\"number\"\n          name=\"step\"\n          defaultValue={step}\n          min={1}\n          max={images.length - 1}\n          onChange={e => this.setState({ step: +e.target.value })}\n        />\n\n        <p>Animation time</p>\n        <input\n          type=\"number\"\n          name=\"animationDuration\"\n          defaultValue={animationDuration}\n          min={0}\n          onChange={e => this.setState({ animationDuration: +e.target.value })}\n        />\n\n        <div>\n          <label htmlFor=\"infinite\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={e => this.setState({ infinite: e.target.checked })}\n            />\n          </label>\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}